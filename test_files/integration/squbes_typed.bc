/*
A version of 'squbes' with types added.
*/

fn add_squbes(mut n: i64, min: i64, max: i64, mut squares: *i64, mut cubes: *i64, mut squbes: *i64) -> none {
    if n ^ 2 <= max {
        if n ^ 2 >= min {
            *squares = *squares + 1;
        }
    }
    if n ^ 3 <= max {
        if n ^ 3 >= min {
            *cubes = *cubes + 1;
        }
    }
    if n ^ 6 <= max {
        if n ^ 6 >= min {
            *squbes = *squbes + 1;
        }
    }
}

let a: i64 = 25;
let b: i64 = 1000;
let mut squares: i64 = 0;
let mut cubes: i64 = 0;
let mut squbes: i64 = 0;
for (let mut i: i64 = 1; i * i <= b; i = i + 1) {
    add_squbes(i, a-0.5, b+0.5, &squares, &cubes, &squbes);
}
let ans: i64 = squares * cubes * squbes;